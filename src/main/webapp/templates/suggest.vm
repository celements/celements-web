$response.setContentType("text/xml")
##
#set($classname = $request.get("classname"))
#set($fieldname = $request.get("fieldname"))
#set($firCol = "$!{request.get('firCol')}")
#set($secCol = "$!{request.get('secCol')}")
#set($templatename = $classname + 'Template')
#set($classref = $services.model.resolveDocument($classname))
#set($p = $celementsweb.getSuggestBaseClass($classref, $fieldname))
#set($hibquery = "$!p.getSql()")
##
## Determine what was the input. If the property accepts multiple values and has separators, then
## use only the last token as the input.
## TODO: What if the user is actually typing in the middle of the input string? The actual word for
## which the autocompletion is triggered should be sent from JS.
##
#set($input = "$!{request.get('input').toLowerCase()}")
#set($sep = "$!{p.getSeparators()}")
#if($p.isMultiSelect() && ($sep != "")) ### has separators
  #set($input_words = $util.split($input, $sep))
  #foreach($i in $input_words)
    #set($input = $i.trim())
  #end
#end

##TODO use extended api with secCol and other fields
#set($results = $celementsweb.getSuggestList($classref, $fieldname, "%${input}%"))
##
######################### User hibernate query
#if("$!hibquery" != "")
  #if($secCol != "-")
    ### two columns, hidden input
    #set($likeCol = $secCol)
    #set($resultsType = 1)
    
  #else ### one column, no hidden input
    #set($likeCol = $firCol)
    #set($resultsType = 2)
  #end
  #set($whereidx = $hibquery.toLowerCase().indexOf("where"))
  #if($whereidx < 0)
    #set($like = " where lower("+ $likeCol.replaceAll("[^a-zA-Z0-9_.]", "") + ") like ?")
    #set($hibquery = $hibquery.concat($like))
  #else
    #set($whereidx = $whereidx + 5)
    #set($like = " lower("+ $firCol.replaceAll("[^a-zA-Z0-9_.]", "") + ") like ? and")
    #set($hibquery = "${hibquery.substring(0, $whereidx)}${like}${hibquery.substring($whereidx)}")
  #end
  #set($results = $xwiki.search($hibquery, 30, 0, ["%${input}%"]))
  <?xml version="1.0" encoding="UTF-8"?>
  <results type="${resultsType}">
  #foreach($res in $results)
    #set($info = '')
    #set($rs = $res)
    #foreach($r in $res)
      #if($velocityCount == 1)
        #set($info = $r)
      #elseif($velocityCount == 2)
        #set($rs = $r)
      #end
    #end
    #if(($info != '-') && ($rs != '-'))
      <rs id="" info="$!{escapetool.xml($info)}">$!{escapetool.xml($rs)}</rs>
    #end
  #end
  </results>
#else ## hibquery == ""
  ######################### DBListProperty query
  #if($p.isRelationalStorage() && $p.isMultiSelect())
    <?xml version="1.0" encoding="UTF-8"?>
    <results type="3">
    #foreach($res in $results)
      <rs id="$velocityCount" info="">$!{escapetool.xml($res)}</rs>
    #end
    </results>
  ######################### StringListProperty query
  #elseif($p.isMultiSelect())
    <?xml version="1.0" encoding="UTF-8"?>
    <results type="5">
    #foreach($res in $results)
      #set($list = $p.getListFromString($res, $sep, false))
      #set($list = $list.toArray())
      #foreach($word in $list)
          <rs id="$velocityCount" info="">$!{escapetool.xml($word)}</rs>
      #end
    #end
    </results>
  ######################### StringProperty query
  #else
    <?xml version="1.0" encoding="UTF-8"?>
    <results type="8">
    #foreach($res in $results)
      <rs id="$velocityCount" info="">$!{escapetool.xml($res)}</rs>
    #end
    </results>
  #end
#end ## if hibquery
